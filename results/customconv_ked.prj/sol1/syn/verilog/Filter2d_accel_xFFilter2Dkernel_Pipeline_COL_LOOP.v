// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        src_kernel_win_5,
        src_kernel_win_3,
        src_kernel_win,
        widthloop,
        cmp204,
        zext_ln696,
        brmerge30,
        locy,
        cmp1_i18,
        cmp179_1,
        empty_26,
        locy_1,
        empty_27,
        empty,
        locy_2,
        p_filter_kernel_0_0_val1,
        p_filter_kernel_0_1_val2,
        p_filter_kernel_0_2_val3,
        p_filter_kernel_1_0_val4,
        p_filter_kernel_1_1_val5,
        p_filter_kernel_1_2_val6,
        p_filter_kernel_2_0_val7,
        p_filter_kernel_2_1_val8,
        p_filter_kernel_2_2_val9,
        shift,
        src_kernel_win_11_out,
        src_kernel_win_11_out_ap_vld,
        src_kernel_win_10_out_i,
        src_kernel_win_10_out_o,
        src_kernel_win_10_out_o_ap_vld,
        src_kernel_win_9_out,
        src_kernel_win_9_out_ap_vld,
        src_kernel_win_8_out_i,
        src_kernel_win_8_out_o,
        src_kernel_win_8_out_o_ap_vld,
        src_kernel_win_7_out_i,
        src_kernel_win_7_out_o,
        src_kernel_win_7_out_o_ap_vld,
        src_kernel_win_6_out,
        src_kernel_win_6_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] imgInput_data_dout;
input  [2:0] imgInput_data_num_data_valid;
input  [2:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [7:0] imgOutput_data_din;
input  [2:0] imgOutput_data_num_data_valid;
input  [2:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [7:0] src_kernel_win_5;
input  [7:0] src_kernel_win_3;
input  [7:0] src_kernel_win;
input  [16:0] widthloop;
input  [0:0] cmp204;
input  [15:0] zext_ln696;
input  [0:0] brmerge30;
input  [1:0] locy;
input  [0:0] cmp1_i18;
input  [0:0] cmp179_1;
input  [0:0] empty_26;
input  [1:0] locy_1;
input  [0:0] empty_27;
input  [0:0] empty;
input  [1:0] locy_2;
input  [15:0] p_filter_kernel_0_0_val1;
input  [15:0] p_filter_kernel_0_1_val2;
input  [15:0] p_filter_kernel_0_2_val3;
input  [15:0] p_filter_kernel_1_0_val4;
input  [15:0] p_filter_kernel_1_1_val5;
input  [15:0] p_filter_kernel_1_2_val6;
input  [15:0] p_filter_kernel_2_0_val7;
input  [15:0] p_filter_kernel_2_1_val8;
input  [15:0] p_filter_kernel_2_2_val9;
input  [7:0] shift;
output  [7:0] src_kernel_win_11_out;
output   src_kernel_win_11_out_ap_vld;
input  [7:0] src_kernel_win_10_out_i;
output  [7:0] src_kernel_win_10_out_o;
output   src_kernel_win_10_out_o_ap_vld;
output  [7:0] src_kernel_win_9_out;
output   src_kernel_win_9_out_ap_vld;
input  [7:0] src_kernel_win_8_out_i;
output  [7:0] src_kernel_win_8_out_o;
output   src_kernel_win_8_out_o_ap_vld;
input  [7:0] src_kernel_win_7_out_i;
output  [7:0] src_kernel_win_7_out_o;
output   src_kernel_win_7_out_o_ap_vld;
output  [7:0] src_kernel_win_6_out;
output   src_kernel_win_6_out_ap_vld;

reg ap_idle;
reg imgInput_data_read;
reg imgOutput_data_write;
reg src_kernel_win_11_out_ap_vld;
reg[7:0] src_kernel_win_10_out_o;
reg src_kernel_win_10_out_o_ap_vld;
reg src_kernel_win_9_out_ap_vld;
reg[7:0] src_kernel_win_8_out_o;
reg src_kernel_win_8_out_o_ap_vld;
reg[7:0] src_kernel_win_7_out_o;
reg src_kernel_win_7_out_o_ap_vld;
reg src_kernel_win_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln709_reg_914;
reg   [0:0] icmp_ln709_reg_914_pp0_iter1_reg;
wire   [0:0] brmerge30_read_reg_904;
reg   [0:0] and_ln637_reg_938;
reg    ap_predicate_op103_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] and_ln794_reg_934;
reg   [0:0] and_ln794_reg_934_pp0_iter27_reg;
reg    ap_block_state29_pp0_stage0_iter28;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln709_fu_431_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgInput_data_blk_n;
wire    ap_block_pp0_stage0;
reg    imgOutput_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_reg_871;
wire   [0:0] tmp_1_reg_875;
wire   [16:0] zext_ln696_cast_fu_400_p1;
reg   [16:0] zext_ln696_cast_reg_908;
reg   [0:0] icmp_ln709_reg_914_pp0_iter2_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter3_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter4_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter5_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter6_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter7_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter8_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter9_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter10_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter11_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter12_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter13_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter14_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter15_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter16_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter17_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter18_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter19_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter20_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter21_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter22_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter23_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter24_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter25_reg;
reg   [0:0] icmp_ln709_reg_914_pp0_iter26_reg;
wire   [15:0] j_2_fu_437_p2;
reg   [15:0] j_2_reg_918;
wire  signed [15:0] ImagLocx_fu_443_p2;
reg  signed [15:0] ImagLocx_reg_923;
reg  signed [15:0] ImagLocx_reg_923_pp0_iter1_reg;
reg   [0:0] tmp_3_reg_929;
reg   [0:0] tmp_3_reg_929_pp0_iter1_reg;
reg   [0:0] tmp_3_reg_929_pp0_iter2_reg;
reg   [0:0] tmp_3_reg_929_pp0_iter3_reg;
reg   [0:0] tmp_3_reg_929_pp0_iter4_reg;
reg   [0:0] tmp_3_reg_929_pp0_iter5_reg;
wire   [0:0] and_ln794_fu_473_p2;
reg   [0:0] and_ln794_reg_934_pp0_iter1_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter2_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter3_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter4_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter5_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter6_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter7_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter8_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter9_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter10_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter11_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter12_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter13_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter14_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter15_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter16_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter17_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter18_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter19_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter20_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter21_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter22_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter23_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter24_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter25_reg;
reg   [0:0] and_ln794_reg_934_pp0_iter26_reg;
wire   [0:0] and_ln637_fu_492_p2;
reg   [0:0] and_ln637_reg_938_pp0_iter2_reg;
reg   [0:0] and_ln637_reg_938_pp0_iter3_reg;
reg   [0:0] and_ln637_reg_938_pp0_iter4_reg;
reg   [0:0] and_ln637_reg_938_pp0_iter5_reg;
wire   [0:0] icmp_ln765_fu_498_p2;
reg   [0:0] icmp_ln765_reg_943;
reg   [0:0] icmp_ln765_reg_943_pp0_iter2_reg;
reg   [0:0] icmp_ln765_reg_943_pp0_iter3_reg;
reg   [0:0] icmp_ln765_reg_943_pp0_iter4_reg;
reg   [0:0] tmp_4_reg_948;
reg   [0:0] tmp_4_reg_948_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_948_pp0_iter4_reg;
reg   [6:0] k_buf_addr_reg_955;
reg   [6:0] k_buf_1_addr_reg_961;
reg   [6:0] k_buf_1_addr_reg_961_pp0_iter3_reg;
reg   [6:0] k_buf_1_addr_reg_961_pp0_iter4_reg;
reg   [6:0] k_buf_2_addr_reg_967;
reg   [6:0] k_buf_2_addr_reg_967_pp0_iter3_reg;
reg   [6:0] k_buf_2_addr_reg_967_pp0_iter4_reg;
reg   [7:0] temp_reg_973;
wire   [7:0] k_buf_q1;
reg   [7:0] k_buf_load_reg_978;
wire   [7:0] k_buf_1_q1;
reg   [7:0] k_buf_1_load_reg_983;
wire   [7:0] k_buf_2_q1;
reg   [7:0] k_buf_2_load_reg_988;
wire   [7:0] src_kernel_win_10_fu_528_p3;
reg   [7:0] src_kernel_win_10_reg_993;
wire   [7:0] src_kernel_win_11_fu_535_p3;
reg   [7:0] src_kernel_win_11_reg_998;
wire   [7:0] src_kernel_win_9_fu_542_p3;
reg   [7:0] src_kernel_win_9_reg_1003;
wire   [7:0] src_kernel_win_12_fu_548_p9;
reg   [7:0] src_kernel_win_12_reg_1008;
wire   [7:0] src_kernel_win_14_fu_567_p9;
reg   [7:0] src_kernel_win_14_reg_1013;
wire   [7:0] src_kernel_win_19_fu_586_p9;
reg   [7:0] src_kernel_win_19_reg_1018;
wire   [0:0] xor_ln765_fu_605_p2;
reg   [0:0] xor_ln765_reg_1023;
reg   [7:0] src_kernel_win_6_reg_1030;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter7_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter8_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter9_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter10_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter11_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter12_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter13_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter14_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter15_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter16_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter17_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter18_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter19_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter20_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter21_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter22_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter23_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter24_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter25_reg;
reg   [7:0] src_kernel_win_6_reg_1030_pp0_iter26_reg;
reg   [7:0] src_kernel_win_7_reg_1037;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter7_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter8_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter9_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter10_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter11_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter12_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter13_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter14_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter15_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter16_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter17_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter18_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter19_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter20_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter21_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter22_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter23_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter24_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter25_reg;
reg   [7:0] src_kernel_win_7_reg_1037_pp0_iter26_reg;
reg   [7:0] src_kernel_win_8_reg_1044;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter7_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter8_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter9_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter10_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter11_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter12_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter13_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter14_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter15_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter16_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter17_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter18_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter19_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter20_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter21_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter22_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter23_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter24_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter25_reg;
reg   [7:0] src_kernel_win_8_reg_1044_pp0_iter26_reg;
wire   [7:0] grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return;
reg   [7:0] temp_1_reg_1081;
reg    ap_condition_exit_pp0_iter6_stage0;
wire   [6:0] k_buf_address0;
reg    k_buf_ce0;
reg    k_buf_we0;
wire   [6:0] k_buf_address1;
reg    k_buf_ce1;
wire   [6:0] k_buf_1_address0;
reg    k_buf_1_ce0;
reg    k_buf_1_we0;
wire   [6:0] k_buf_1_address1;
reg    k_buf_1_ce1;
wire   [6:0] k_buf_2_address0;
reg    k_buf_2_ce0;
reg    k_buf_2_we0;
wire   [6:0] k_buf_2_address1;
reg    k_buf_2_ce1;
reg    grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce;
reg    ap_predicate_op156_call_state8;
reg    ap_block_state3_pp0_stage0_iter2_ignore_call6;
reg    ap_block_state29_pp0_stage0_iter28_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp156;
wire   [63:0] idxprom_fu_521_p1;
reg   [15:0] j_fu_138;
reg   [15:0] ap_sig_allocacmp_j_1;
wire    ap_loop_init;
reg   [7:0] src_kernel_win_1_fu_142;
wire   [7:0] src_kernel_win_13_fu_619_p3;
wire   [7:0] src_kernel_win_16_fu_669_p3;
reg   [7:0] src_kernel_win_2_fu_146;
wire   [7:0] src_kernel_win_15_fu_629_p3;
wire   [7:0] src_kernel_win_17_fu_662_p3;
reg   [7:0] src_kernel_win_4_fu_150;
wire   [7:0] src_kernel_win_18_fu_655_p3;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] zext_ln709_fu_427_p1;
wire   [14:0] tmp_5_fu_457_p4;
wire   [0:0] icmp_ln794_fu_467_p2;
wire  signed [16:0] sext_ln637_fu_479_p1;
wire   [0:0] icmp_ln637_fu_487_p2;
wire   [0:0] xor_ln637_fu_482_p2;
wire   [15:0] x_fu_507_p3;
wire   [7:0] src_kernel_win_12_fu_548_p7;
wire   [7:0] src_kernel_win_14_fu_567_p7;
wire   [7:0] src_kernel_win_19_fu_586_p7;
wire   [0:0] or_ln783_fu_625_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op107_store_state4;
reg    ap_enable_operation_107;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_100;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_108;
reg    ap_enable_state5_pp0_iter4_stage0;
reg    ap_enable_operation_101;
reg    ap_enable_operation_109;
reg    ap_predicate_op121_store_state6;
reg    ap_enable_operation_121;
reg    ap_enable_state6_pp0_iter5_stage0;
reg    ap_enable_operation_102;
reg    ap_enable_operation_110;
reg    ap_predicate_op120_store_state6;
reg    ap_enable_operation_120;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1494;
reg    ap_condition_1500;
reg    ap_condition_1506;
reg    ap_condition_1511;
reg    ap_condition_1517;
reg    ap_condition_1523;
wire   [1:0] src_kernel_win_12_fu_548_p1;
wire   [1:0] src_kernel_win_12_fu_548_p3;
wire  signed [1:0] src_kernel_win_12_fu_548_p5;
wire   [1:0] src_kernel_win_14_fu_567_p1;
wire   [1:0] src_kernel_win_14_fu_567_p3;
wire  signed [1:0] src_kernel_win_14_fu_567_p5;
wire   [1:0] src_kernel_win_19_fu_586_p1;
wire   [1:0] src_kernel_win_19_fu_586_p3;
wire  signed [1:0] src_kernel_win_19_fu_586_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 j_fu_138 = 16'd0;
#0 src_kernel_win_1_fu_142 = 8'd0;
#0 src_kernel_win_2_fu_146 = 8'd0;
#0 src_kernel_win_4_fu_150 = 8'd0;
#0 ap_done_reg = 1'b0;
end

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
k_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_address0),
    .ce0(k_buf_ce0),
    .we0(k_buf_we0),
    .d0(temp_reg_973),
    .address1(k_buf_address1),
    .ce1(k_buf_ce1),
    .q1(k_buf_q1)
);

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
k_buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_address0),
    .ce0(k_buf_1_ce0),
    .we0(k_buf_1_we0),
    .d0(src_kernel_win_11_fu_535_p3),
    .address1(k_buf_1_address1),
    .ce1(k_buf_1_ce1),
    .q1(k_buf_1_q1)
);

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
k_buf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_address0),
    .ce0(k_buf_2_ce0),
    .we0(k_buf_2_we0),
    .d0(src_kernel_win_10_fu_528_p3),
    .address1(k_buf_2_address1),
    .ce1(k_buf_2_ce1),
    .q1(k_buf_2_q1)
);

Filter2d_accel_xFApplyFilter2D_0_0_3_3_1_s grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_kernel_pixel_0_0_val(src_kernel_win_1_fu_142),
    .p_kernel_pixel_0_1_val(src_kernel_win_6_reg_1030),
    .p_kernel_pixel_0_2_val(src_kernel_win_7_out_i),
    .p_kernel_pixel_1_0_val(src_kernel_win_2_fu_146),
    .p_kernel_pixel_1_1_val(src_kernel_win_7_reg_1037),
    .p_kernel_pixel_1_2_val(src_kernel_win_10_out_i),
    .p_kernel_pixel_2_0_val(src_kernel_win_4_fu_150),
    .p_kernel_pixel_2_1_val(src_kernel_win_8_reg_1044),
    .p_kernel_pixel_2_2_val(src_kernel_win_8_out_i),
    .p_kernel_filter_0_0_val(p_filter_kernel_0_0_val1),
    .p_kernel_filter_0_1_val(p_filter_kernel_0_1_val2),
    .p_kernel_filter_0_2_val(p_filter_kernel_0_2_val3),
    .p_kernel_filter_1_0_val(p_filter_kernel_1_0_val4),
    .p_kernel_filter_1_1_val(p_filter_kernel_1_1_val5),
    .p_kernel_filter_1_2_val(p_filter_kernel_1_2_val6),
    .p_kernel_filter_2_0_val(p_filter_kernel_2_0_val7),
    .p_kernel_filter_2_1_val(p_filter_kernel_2_1_val8),
    .p_kernel_filter_2_2_val(p_filter_kernel_2_2_val9),
    .shift(shift),
    .ap_return(grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return),
    .ap_ce(grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce)
);

Filter2d_accel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U115(
    .din0(src_kernel_win_11_fu_535_p3),
    .din1(src_kernel_win_10_fu_528_p3),
    .din2(src_kernel_win_9_fu_542_p3),
    .def(src_kernel_win_12_fu_548_p7),
    .sel(locy),
    .dout(src_kernel_win_12_fu_548_p9)
);

Filter2d_accel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U116(
    .din0(src_kernel_win_11_fu_535_p3),
    .din1(src_kernel_win_10_fu_528_p3),
    .din2(src_kernel_win_9_fu_542_p3),
    .def(src_kernel_win_14_fu_567_p7),
    .sel(locy_1),
    .dout(src_kernel_win_14_fu_567_p9)
);

Filter2d_accel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U117(
    .din0(src_kernel_win_11_fu_535_p3),
    .din1(src_kernel_win_10_fu_528_p3),
    .din2(src_kernel_win_9_fu_542_p3),
    .def(src_kernel_win_19_fu_586_p7),
    .sel(locy_2),
    .dout(src_kernel_win_19_fu_586_p9)
);

Filter2d_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter27_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter6_stage0)) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_138 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln709_reg_914 == 1'd1))) begin
            j_fu_138 <= j_2_reg_918;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_kernel_win_1_fu_142 <= src_kernel_win;
        end else if ((1'b1 == ap_condition_1511)) begin
            src_kernel_win_1_fu_142 <= src_kernel_win_11_reg_998;
        end else if ((1'b1 == ap_condition_1506)) begin
            src_kernel_win_1_fu_142 <= 8'd0;
        end else if ((1'b1 == ap_condition_1500)) begin
            src_kernel_win_1_fu_142 <= src_kernel_win_16_fu_669_p3;
        end else if ((1'b1 == ap_condition_1494)) begin
            src_kernel_win_1_fu_142 <= src_kernel_win_13_fu_619_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_kernel_win_2_fu_146 <= src_kernel_win_3;
        end else if ((1'b1 == ap_condition_1511)) begin
            src_kernel_win_2_fu_146 <= src_kernel_win_10_reg_993;
        end else if ((1'b1 == ap_condition_1506)) begin
            src_kernel_win_2_fu_146 <= 8'd0;
        end else if ((1'b1 == ap_condition_1500)) begin
            src_kernel_win_2_fu_146 <= src_kernel_win_17_fu_662_p3;
        end else if ((1'b1 == ap_condition_1494)) begin
            src_kernel_win_2_fu_146 <= src_kernel_win_15_fu_629_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_kernel_win_4_fu_150 <= src_kernel_win_5;
        end else if ((1'b1 == ap_condition_1511)) begin
            src_kernel_win_4_fu_150 <= src_kernel_win_9_reg_1003;
        end else if ((1'b1 == ap_condition_1506)) begin
            src_kernel_win_4_fu_150 <= 8'd0;
        end else if ((1'b1 == ap_condition_1500)) begin
            src_kernel_win_4_fu_150 <= src_kernel_win_18_fu_655_p3;
        end else if ((1'b1 == ap_condition_1523)) begin
            src_kernel_win_4_fu_150 <= src_kernel_win_19_reg_1018;
        end else if ((1'b1 == ap_condition_1517)) begin
            src_kernel_win_4_fu_150 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLocx_reg_923 <= ImagLocx_fu_443_p2;
        ImagLocx_reg_923_pp0_iter1_reg <= ImagLocx_reg_923;
        and_ln637_reg_938 <= and_ln637_fu_492_p2;
        and_ln794_reg_934 <= and_ln794_fu_473_p2;
        and_ln794_reg_934_pp0_iter1_reg <= and_ln794_reg_934;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln709_reg_914 <= icmp_ln709_fu_431_p2;
        icmp_ln709_reg_914_pp0_iter1_reg <= icmp_ln709_reg_914;
        icmp_ln765_reg_943 <= icmp_ln765_fu_498_p2;
        j_2_reg_918 <= j_2_fu_437_p2;
        tmp_3_reg_929 <= ImagLocx_fu_443_p2[32'd15];
        tmp_3_reg_929_pp0_iter1_reg <= tmp_3_reg_929;
        zext_ln696_cast_reg_908[15 : 0] <= zext_ln696_cast_fu_400_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln637_reg_938_pp0_iter2_reg <= and_ln637_reg_938;
        and_ln637_reg_938_pp0_iter3_reg <= and_ln637_reg_938_pp0_iter2_reg;
        and_ln637_reg_938_pp0_iter4_reg <= and_ln637_reg_938_pp0_iter3_reg;
        and_ln637_reg_938_pp0_iter5_reg <= and_ln637_reg_938_pp0_iter4_reg;
        and_ln794_reg_934_pp0_iter10_reg <= and_ln794_reg_934_pp0_iter9_reg;
        and_ln794_reg_934_pp0_iter11_reg <= and_ln794_reg_934_pp0_iter10_reg;
        and_ln794_reg_934_pp0_iter12_reg <= and_ln794_reg_934_pp0_iter11_reg;
        and_ln794_reg_934_pp0_iter13_reg <= and_ln794_reg_934_pp0_iter12_reg;
        and_ln794_reg_934_pp0_iter14_reg <= and_ln794_reg_934_pp0_iter13_reg;
        and_ln794_reg_934_pp0_iter15_reg <= and_ln794_reg_934_pp0_iter14_reg;
        and_ln794_reg_934_pp0_iter16_reg <= and_ln794_reg_934_pp0_iter15_reg;
        and_ln794_reg_934_pp0_iter17_reg <= and_ln794_reg_934_pp0_iter16_reg;
        and_ln794_reg_934_pp0_iter18_reg <= and_ln794_reg_934_pp0_iter17_reg;
        and_ln794_reg_934_pp0_iter19_reg <= and_ln794_reg_934_pp0_iter18_reg;
        and_ln794_reg_934_pp0_iter20_reg <= and_ln794_reg_934_pp0_iter19_reg;
        and_ln794_reg_934_pp0_iter21_reg <= and_ln794_reg_934_pp0_iter20_reg;
        and_ln794_reg_934_pp0_iter22_reg <= and_ln794_reg_934_pp0_iter21_reg;
        and_ln794_reg_934_pp0_iter23_reg <= and_ln794_reg_934_pp0_iter22_reg;
        and_ln794_reg_934_pp0_iter24_reg <= and_ln794_reg_934_pp0_iter23_reg;
        and_ln794_reg_934_pp0_iter25_reg <= and_ln794_reg_934_pp0_iter24_reg;
        and_ln794_reg_934_pp0_iter26_reg <= and_ln794_reg_934_pp0_iter25_reg;
        and_ln794_reg_934_pp0_iter27_reg <= and_ln794_reg_934_pp0_iter26_reg;
        and_ln794_reg_934_pp0_iter2_reg <= and_ln794_reg_934_pp0_iter1_reg;
        and_ln794_reg_934_pp0_iter3_reg <= and_ln794_reg_934_pp0_iter2_reg;
        and_ln794_reg_934_pp0_iter4_reg <= and_ln794_reg_934_pp0_iter3_reg;
        and_ln794_reg_934_pp0_iter5_reg <= and_ln794_reg_934_pp0_iter4_reg;
        and_ln794_reg_934_pp0_iter6_reg <= and_ln794_reg_934_pp0_iter5_reg;
        and_ln794_reg_934_pp0_iter7_reg <= and_ln794_reg_934_pp0_iter6_reg;
        and_ln794_reg_934_pp0_iter8_reg <= and_ln794_reg_934_pp0_iter7_reg;
        and_ln794_reg_934_pp0_iter9_reg <= and_ln794_reg_934_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln709_reg_914_pp0_iter10_reg <= icmp_ln709_reg_914_pp0_iter9_reg;
        icmp_ln709_reg_914_pp0_iter11_reg <= icmp_ln709_reg_914_pp0_iter10_reg;
        icmp_ln709_reg_914_pp0_iter12_reg <= icmp_ln709_reg_914_pp0_iter11_reg;
        icmp_ln709_reg_914_pp0_iter13_reg <= icmp_ln709_reg_914_pp0_iter12_reg;
        icmp_ln709_reg_914_pp0_iter14_reg <= icmp_ln709_reg_914_pp0_iter13_reg;
        icmp_ln709_reg_914_pp0_iter15_reg <= icmp_ln709_reg_914_pp0_iter14_reg;
        icmp_ln709_reg_914_pp0_iter16_reg <= icmp_ln709_reg_914_pp0_iter15_reg;
        icmp_ln709_reg_914_pp0_iter17_reg <= icmp_ln709_reg_914_pp0_iter16_reg;
        icmp_ln709_reg_914_pp0_iter18_reg <= icmp_ln709_reg_914_pp0_iter17_reg;
        icmp_ln709_reg_914_pp0_iter19_reg <= icmp_ln709_reg_914_pp0_iter18_reg;
        icmp_ln709_reg_914_pp0_iter20_reg <= icmp_ln709_reg_914_pp0_iter19_reg;
        icmp_ln709_reg_914_pp0_iter21_reg <= icmp_ln709_reg_914_pp0_iter20_reg;
        icmp_ln709_reg_914_pp0_iter22_reg <= icmp_ln709_reg_914_pp0_iter21_reg;
        icmp_ln709_reg_914_pp0_iter23_reg <= icmp_ln709_reg_914_pp0_iter22_reg;
        icmp_ln709_reg_914_pp0_iter24_reg <= icmp_ln709_reg_914_pp0_iter23_reg;
        icmp_ln709_reg_914_pp0_iter25_reg <= icmp_ln709_reg_914_pp0_iter24_reg;
        icmp_ln709_reg_914_pp0_iter26_reg <= icmp_ln709_reg_914_pp0_iter25_reg;
        icmp_ln709_reg_914_pp0_iter2_reg <= icmp_ln709_reg_914_pp0_iter1_reg;
        icmp_ln709_reg_914_pp0_iter3_reg <= icmp_ln709_reg_914_pp0_iter2_reg;
        icmp_ln709_reg_914_pp0_iter4_reg <= icmp_ln709_reg_914_pp0_iter3_reg;
        icmp_ln709_reg_914_pp0_iter5_reg <= icmp_ln709_reg_914_pp0_iter4_reg;
        icmp_ln709_reg_914_pp0_iter6_reg <= icmp_ln709_reg_914_pp0_iter5_reg;
        icmp_ln709_reg_914_pp0_iter7_reg <= icmp_ln709_reg_914_pp0_iter6_reg;
        icmp_ln709_reg_914_pp0_iter8_reg <= icmp_ln709_reg_914_pp0_iter7_reg;
        icmp_ln709_reg_914_pp0_iter9_reg <= icmp_ln709_reg_914_pp0_iter8_reg;
        icmp_ln765_reg_943_pp0_iter2_reg <= icmp_ln765_reg_943;
        icmp_ln765_reg_943_pp0_iter3_reg <= icmp_ln765_reg_943_pp0_iter2_reg;
        icmp_ln765_reg_943_pp0_iter4_reg <= icmp_ln765_reg_943_pp0_iter3_reg;
        k_buf_1_addr_reg_961 <= idxprom_fu_521_p1;
        k_buf_1_addr_reg_961_pp0_iter3_reg <= k_buf_1_addr_reg_961;
        k_buf_1_addr_reg_961_pp0_iter4_reg <= k_buf_1_addr_reg_961_pp0_iter3_reg;
        k_buf_2_addr_reg_967 <= idxprom_fu_521_p1;
        k_buf_2_addr_reg_967_pp0_iter3_reg <= k_buf_2_addr_reg_967;
        k_buf_2_addr_reg_967_pp0_iter4_reg <= k_buf_2_addr_reg_967_pp0_iter3_reg;
        k_buf_addr_reg_955 <= idxprom_fu_521_p1;
        src_kernel_win_10_reg_993 <= src_kernel_win_10_fu_528_p3;
        src_kernel_win_11_reg_998 <= src_kernel_win_11_fu_535_p3;
        src_kernel_win_12_reg_1008 <= src_kernel_win_12_fu_548_p9;
        src_kernel_win_14_reg_1013 <= src_kernel_win_14_fu_567_p9;
        src_kernel_win_19_reg_1018 <= src_kernel_win_19_fu_586_p9;
        src_kernel_win_6_reg_1030_pp0_iter10_reg <= src_kernel_win_6_reg_1030_pp0_iter9_reg;
        src_kernel_win_6_reg_1030_pp0_iter11_reg <= src_kernel_win_6_reg_1030_pp0_iter10_reg;
        src_kernel_win_6_reg_1030_pp0_iter12_reg <= src_kernel_win_6_reg_1030_pp0_iter11_reg;
        src_kernel_win_6_reg_1030_pp0_iter13_reg <= src_kernel_win_6_reg_1030_pp0_iter12_reg;
        src_kernel_win_6_reg_1030_pp0_iter14_reg <= src_kernel_win_6_reg_1030_pp0_iter13_reg;
        src_kernel_win_6_reg_1030_pp0_iter15_reg <= src_kernel_win_6_reg_1030_pp0_iter14_reg;
        src_kernel_win_6_reg_1030_pp0_iter16_reg <= src_kernel_win_6_reg_1030_pp0_iter15_reg;
        src_kernel_win_6_reg_1030_pp0_iter17_reg <= src_kernel_win_6_reg_1030_pp0_iter16_reg;
        src_kernel_win_6_reg_1030_pp0_iter18_reg <= src_kernel_win_6_reg_1030_pp0_iter17_reg;
        src_kernel_win_6_reg_1030_pp0_iter19_reg <= src_kernel_win_6_reg_1030_pp0_iter18_reg;
        src_kernel_win_6_reg_1030_pp0_iter20_reg <= src_kernel_win_6_reg_1030_pp0_iter19_reg;
        src_kernel_win_6_reg_1030_pp0_iter21_reg <= src_kernel_win_6_reg_1030_pp0_iter20_reg;
        src_kernel_win_6_reg_1030_pp0_iter22_reg <= src_kernel_win_6_reg_1030_pp0_iter21_reg;
        src_kernel_win_6_reg_1030_pp0_iter23_reg <= src_kernel_win_6_reg_1030_pp0_iter22_reg;
        src_kernel_win_6_reg_1030_pp0_iter24_reg <= src_kernel_win_6_reg_1030_pp0_iter23_reg;
        src_kernel_win_6_reg_1030_pp0_iter25_reg <= src_kernel_win_6_reg_1030_pp0_iter24_reg;
        src_kernel_win_6_reg_1030_pp0_iter26_reg <= src_kernel_win_6_reg_1030_pp0_iter25_reg;
        src_kernel_win_6_reg_1030_pp0_iter7_reg <= src_kernel_win_6_reg_1030;
        src_kernel_win_6_reg_1030_pp0_iter8_reg <= src_kernel_win_6_reg_1030_pp0_iter7_reg;
        src_kernel_win_6_reg_1030_pp0_iter9_reg <= src_kernel_win_6_reg_1030_pp0_iter8_reg;
        src_kernel_win_7_reg_1037_pp0_iter10_reg <= src_kernel_win_7_reg_1037_pp0_iter9_reg;
        src_kernel_win_7_reg_1037_pp0_iter11_reg <= src_kernel_win_7_reg_1037_pp0_iter10_reg;
        src_kernel_win_7_reg_1037_pp0_iter12_reg <= src_kernel_win_7_reg_1037_pp0_iter11_reg;
        src_kernel_win_7_reg_1037_pp0_iter13_reg <= src_kernel_win_7_reg_1037_pp0_iter12_reg;
        src_kernel_win_7_reg_1037_pp0_iter14_reg <= src_kernel_win_7_reg_1037_pp0_iter13_reg;
        src_kernel_win_7_reg_1037_pp0_iter15_reg <= src_kernel_win_7_reg_1037_pp0_iter14_reg;
        src_kernel_win_7_reg_1037_pp0_iter16_reg <= src_kernel_win_7_reg_1037_pp0_iter15_reg;
        src_kernel_win_7_reg_1037_pp0_iter17_reg <= src_kernel_win_7_reg_1037_pp0_iter16_reg;
        src_kernel_win_7_reg_1037_pp0_iter18_reg <= src_kernel_win_7_reg_1037_pp0_iter17_reg;
        src_kernel_win_7_reg_1037_pp0_iter19_reg <= src_kernel_win_7_reg_1037_pp0_iter18_reg;
        src_kernel_win_7_reg_1037_pp0_iter20_reg <= src_kernel_win_7_reg_1037_pp0_iter19_reg;
        src_kernel_win_7_reg_1037_pp0_iter21_reg <= src_kernel_win_7_reg_1037_pp0_iter20_reg;
        src_kernel_win_7_reg_1037_pp0_iter22_reg <= src_kernel_win_7_reg_1037_pp0_iter21_reg;
        src_kernel_win_7_reg_1037_pp0_iter23_reg <= src_kernel_win_7_reg_1037_pp0_iter22_reg;
        src_kernel_win_7_reg_1037_pp0_iter24_reg <= src_kernel_win_7_reg_1037_pp0_iter23_reg;
        src_kernel_win_7_reg_1037_pp0_iter25_reg <= src_kernel_win_7_reg_1037_pp0_iter24_reg;
        src_kernel_win_7_reg_1037_pp0_iter26_reg <= src_kernel_win_7_reg_1037_pp0_iter25_reg;
        src_kernel_win_7_reg_1037_pp0_iter7_reg <= src_kernel_win_7_reg_1037;
        src_kernel_win_7_reg_1037_pp0_iter8_reg <= src_kernel_win_7_reg_1037_pp0_iter7_reg;
        src_kernel_win_7_reg_1037_pp0_iter9_reg <= src_kernel_win_7_reg_1037_pp0_iter8_reg;
        src_kernel_win_8_reg_1044_pp0_iter10_reg <= src_kernel_win_8_reg_1044_pp0_iter9_reg;
        src_kernel_win_8_reg_1044_pp0_iter11_reg <= src_kernel_win_8_reg_1044_pp0_iter10_reg;
        src_kernel_win_8_reg_1044_pp0_iter12_reg <= src_kernel_win_8_reg_1044_pp0_iter11_reg;
        src_kernel_win_8_reg_1044_pp0_iter13_reg <= src_kernel_win_8_reg_1044_pp0_iter12_reg;
        src_kernel_win_8_reg_1044_pp0_iter14_reg <= src_kernel_win_8_reg_1044_pp0_iter13_reg;
        src_kernel_win_8_reg_1044_pp0_iter15_reg <= src_kernel_win_8_reg_1044_pp0_iter14_reg;
        src_kernel_win_8_reg_1044_pp0_iter16_reg <= src_kernel_win_8_reg_1044_pp0_iter15_reg;
        src_kernel_win_8_reg_1044_pp0_iter17_reg <= src_kernel_win_8_reg_1044_pp0_iter16_reg;
        src_kernel_win_8_reg_1044_pp0_iter18_reg <= src_kernel_win_8_reg_1044_pp0_iter17_reg;
        src_kernel_win_8_reg_1044_pp0_iter19_reg <= src_kernel_win_8_reg_1044_pp0_iter18_reg;
        src_kernel_win_8_reg_1044_pp0_iter20_reg <= src_kernel_win_8_reg_1044_pp0_iter19_reg;
        src_kernel_win_8_reg_1044_pp0_iter21_reg <= src_kernel_win_8_reg_1044_pp0_iter20_reg;
        src_kernel_win_8_reg_1044_pp0_iter22_reg <= src_kernel_win_8_reg_1044_pp0_iter21_reg;
        src_kernel_win_8_reg_1044_pp0_iter23_reg <= src_kernel_win_8_reg_1044_pp0_iter22_reg;
        src_kernel_win_8_reg_1044_pp0_iter24_reg <= src_kernel_win_8_reg_1044_pp0_iter23_reg;
        src_kernel_win_8_reg_1044_pp0_iter25_reg <= src_kernel_win_8_reg_1044_pp0_iter24_reg;
        src_kernel_win_8_reg_1044_pp0_iter26_reg <= src_kernel_win_8_reg_1044_pp0_iter25_reg;
        src_kernel_win_8_reg_1044_pp0_iter7_reg <= src_kernel_win_8_reg_1044;
        src_kernel_win_8_reg_1044_pp0_iter8_reg <= src_kernel_win_8_reg_1044_pp0_iter7_reg;
        src_kernel_win_8_reg_1044_pp0_iter9_reg <= src_kernel_win_8_reg_1044_pp0_iter8_reg;
        src_kernel_win_9_reg_1003 <= src_kernel_win_9_fu_542_p3;
        temp_1_reg_1081 <= grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return;
        temp_reg_973 <= imgInput_data_dout;
        tmp_3_reg_929_pp0_iter2_reg <= tmp_3_reg_929_pp0_iter1_reg;
        tmp_3_reg_929_pp0_iter3_reg <= tmp_3_reg_929_pp0_iter2_reg;
        tmp_3_reg_929_pp0_iter4_reg <= tmp_3_reg_929_pp0_iter3_reg;
        tmp_3_reg_929_pp0_iter5_reg <= tmp_3_reg_929_pp0_iter4_reg;
        tmp_4_reg_948 <= x_fu_507_p3[32'd15];
        tmp_4_reg_948_pp0_iter3_reg <= tmp_4_reg_948;
        tmp_4_reg_948_pp0_iter4_reg <= tmp_4_reg_948_pp0_iter3_reg;
        xor_ln765_reg_1023 <= xor_ln765_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_load_reg_983 <= k_buf_1_q1;
        k_buf_2_load_reg_988 <= k_buf_2_q1;
        k_buf_load_reg_978 <= k_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_6_reg_1030 <= src_kernel_win_1_fu_142;
        src_kernel_win_7_reg_1037 <= src_kernel_win_2_fu_146;
        src_kernel_win_8_reg_1044 <= src_kernel_win_4_fu_150;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln709_fu_431_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter27_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) 
    & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_j_1 = 16'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln709_reg_914 == 1'd1))) begin
            ap_sig_allocacmp_j_1 = j_2_reg_918;
        end else begin
            ap_sig_allocacmp_j_1 = j_fu_138;
        end
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_138;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp156))) begin
        grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce = 1'b1;
    end else begin
        grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op103_read_state3 == 1'b1))) begin
        imgInput_data_blk_n = imgInput_data_empty_n;
    end else begin
        imgInput_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op103_read_state3 == 1'b1))) begin
        imgInput_data_read = 1'b1;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln794_reg_934_pp0_iter27_reg) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        imgOutput_data_blk_n = imgOutput_data_full_n;
    end else begin
        imgOutput_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln794_reg_934_pp0_iter27_reg) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        imgOutput_data_write = 1'b1;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_ce0 = 1'b1;
    end else begin
        k_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_ce1 = 1'b1;
    end else begin
        k_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter4_reg))) begin
        k_buf_1_we0 = 1'b1;
    end else begin
        k_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_ce0 = 1'b1;
    end else begin
        k_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_ce1 = 1'b1;
    end else begin
        k_buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter4_reg))) begin
        k_buf_2_we0 = 1'b1;
    end else begin
        k_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_ce0 = 1'b1;
    end else begin
        k_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_ce1 = 1'b1;
    end else begin
        k_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter2_reg))) begin
        k_buf_we0 = 1'b1;
    end else begin
        k_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_10_out_o = src_kernel_win_7_reg_1037;
    end else begin
        src_kernel_win_10_out_o = src_kernel_win_10_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_10_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_10_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_11_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_6_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_7_out_o = src_kernel_win_6_reg_1030;
    end else begin
        src_kernel_win_7_out_o = src_kernel_win_7_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_7_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_7_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_8_out_o = src_kernel_win_8_reg_1044;
    end else begin
        src_kernel_win_8_out_o = src_kernel_win_8_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_8_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_8_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_914_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_9_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLocx_fu_443_p2 = ($signed(ap_sig_allocacmp_j_1) + $signed(16'd65535));

assign and_ln637_fu_492_p2 = (xor_ln637_fu_482_p2 & icmp_ln637_fu_487_p2);

assign and_ln794_fu_473_p2 = (icmp_ln794_fu_467_p2 & cmp204);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b1 == ap_block_state29_pp0_stage0_iter28) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state29_pp0_stage0_iter28) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp156 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2_ignore_call6)) | ((1'b1 == ap_block_state29_pp0_stage0_iter28_ignore_call6) & (ap_enable_reg_pp0_iter28 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state29_pp0_stage0_iter28) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state29_pp0_stage0_iter28 = ((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_934_pp0_iter27_reg));
end

always @ (*) begin
    ap_block_state29_pp0_stage0_iter28_ignore_call6 = ((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_934_pp0_iter27_reg));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op103_read_state3 == 1'b1) & (imgInput_data_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2_ignore_call6 = ((ap_predicate_op103_read_state3 == 1'b1) & (imgInput_data_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_1494 = ((icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (tmp_reg_871 == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (brmerge30_read_reg_904 == 1'd0));
end

always @ (*) begin
    ap_condition_1500 = ((tmp_3_reg_929_pp0_iter5_reg == 1'd0) & (icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'd0 == and_ln637_reg_938_pp0_iter5_reg) & (brmerge30 == 1'd1));
end

always @ (*) begin
    ap_condition_1506 = ((tmp_3_reg_929_pp0_iter5_reg == 1'd1) & (icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'd0 == and_ln637_reg_938_pp0_iter5_reg) & (brmerge30 == 1'd1));
end

always @ (*) begin
    ap_condition_1511 = ((icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter5_reg));
end

always @ (*) begin
    ap_condition_1517 = ((icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (tmp_1_reg_875 == 1'd0) & (tmp_reg_871 == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (brmerge30_read_reg_904 == 1'd0));
end

always @ (*) begin
    ap_condition_1523 = ((icmp_ln709_reg_914_pp0_iter5_reg == 1'd1) & (tmp_1_reg_875 == 1'd1) & (tmp_reg_871 == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (brmerge30_read_reg_904 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_100 = (icmp_ln709_reg_914_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_101 = (icmp_ln709_reg_914_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_102 = (icmp_ln709_reg_914_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_107 = (ap_predicate_op107_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_108 = (icmp_ln709_reg_914_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_109 = (icmp_ln709_reg_914_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_110 = (icmp_ln709_reg_914_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_120 = (ap_predicate_op120_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_121 = (ap_predicate_op121_store_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter5_stage0 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op103_read_state3 = ((brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938) & (icmp_ln709_reg_914_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op107_store_state4 = ((icmp_ln709_reg_914_pp0_iter2_reg == 1'd1) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter2_reg));
end

always @ (*) begin
    ap_predicate_op120_store_state6 = ((icmp_ln709_reg_914_pp0_iter4_reg == 1'd1) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter4_reg));
end

always @ (*) begin
    ap_predicate_op121_store_state6 = ((icmp_ln709_reg_914_pp0_iter4_reg == 1'd1) & (brmerge30 == 1'd1) & (1'd1 == and_ln637_reg_938_pp0_iter4_reg));
end

always @ (*) begin
    ap_predicate_op156_call_state8 = ((icmp_ln709_reg_914_pp0_iter6_reg == 1'd1) & (1'd1 == and_ln794_reg_934_pp0_iter6_reg));
end

assign brmerge30_read_reg_904 = brmerge30;

assign icmp_ln637_fu_487_p2 = (($signed(sext_ln637_fu_479_p1) < $signed(zext_ln696_cast_reg_908)) ? 1'b1 : 1'b0);

assign icmp_ln709_fu_431_p2 = ((widthloop > zext_ln709_fu_427_p1) ? 1'b1 : 1'b0);

assign icmp_ln765_fu_498_p2 = (($signed(sext_ln637_fu_479_p1) < $signed(zext_ln696_cast_reg_908)) ? 1'b1 : 1'b0);

assign icmp_ln794_fu_467_p2 = ((tmp_5_fu_457_p4 != 15'd0) ? 1'b1 : 1'b0);

assign idxprom_fu_521_p1 = x_fu_507_p3;

assign imgOutput_data_din = temp_1_reg_1081;

assign j_2_fu_437_p2 = (ap_sig_allocacmp_j_1 + 16'd1);

assign k_buf_1_address0 = k_buf_1_addr_reg_961_pp0_iter4_reg;

assign k_buf_1_address1 = idxprom_fu_521_p1;

assign k_buf_2_address0 = k_buf_2_addr_reg_967_pp0_iter4_reg;

assign k_buf_2_address1 = idxprom_fu_521_p1;

assign k_buf_address0 = k_buf_addr_reg_955;

assign k_buf_address1 = idxprom_fu_521_p1;

assign or_ln783_fu_625_p2 = (empty_26 | cmp179_1);

assign sext_ln637_fu_479_p1 = ImagLocx_reg_923;

assign src_kernel_win_10_fu_528_p3 = ((tmp_4_reg_948_pp0_iter4_reg[0:0] == 1'b1) ? 8'd0 : k_buf_1_load_reg_983);

assign src_kernel_win_11_fu_535_p3 = ((tmp_4_reg_948_pp0_iter4_reg[0:0] == 1'b1) ? 8'd0 : k_buf_load_reg_978);

assign src_kernel_win_11_out = src_kernel_win_8_reg_1044_pp0_iter26_reg;

assign src_kernel_win_12_fu_548_p7 = 'bx;

assign src_kernel_win_13_fu_619_p3 = ((cmp1_i18[0:0] == 1'b1) ? src_kernel_win_12_reg_1008 : 8'd0);

assign src_kernel_win_14_fu_567_p7 = 'bx;

assign src_kernel_win_15_fu_629_p3 = ((or_ln783_fu_625_p2[0:0] == 1'b1) ? 8'd0 : src_kernel_win_14_reg_1013);

assign src_kernel_win_16_fu_669_p3 = ((xor_ln765_reg_1023[0:0] == 1'b1) ? 8'd0 : src_kernel_win_1_fu_142);

assign src_kernel_win_17_fu_662_p3 = ((xor_ln765_reg_1023[0:0] == 1'b1) ? 8'd0 : src_kernel_win_2_fu_146);

assign src_kernel_win_18_fu_655_p3 = ((xor_ln765_reg_1023[0:0] == 1'b1) ? 8'd0 : src_kernel_win_4_fu_150);

assign src_kernel_win_19_fu_586_p7 = 'bx;

assign src_kernel_win_6_out = src_kernel_win_6_reg_1030_pp0_iter26_reg;

assign src_kernel_win_9_fu_542_p3 = ((tmp_4_reg_948_pp0_iter4_reg[0:0] == 1'b1) ? 8'd0 : k_buf_2_load_reg_988);

assign src_kernel_win_9_out = src_kernel_win_7_reg_1037_pp0_iter26_reg;

assign tmp_1_reg_875 = empty_27;

assign tmp_5_fu_457_p4 = {{ap_sig_allocacmp_j_1[15:1]}};

assign tmp_reg_871 = empty;

assign x_fu_507_p3 = ((and_ln637_reg_938[0:0] == 1'b1) ? ImagLocx_reg_923_pp0_iter1_reg : 16'd65535);

assign xor_ln637_fu_482_p2 = (tmp_3_reg_929 ^ 1'd1);

assign xor_ln765_fu_605_p2 = (icmp_ln765_reg_943_pp0_iter4_reg ^ 1'd1);

assign zext_ln696_cast_fu_400_p1 = zext_ln696;

assign zext_ln709_fu_427_p1 = ap_sig_allocacmp_j_1;

always @ (posedge ap_clk) begin
    zext_ln696_cast_reg_908[16] <= 1'b0;
end

endmodule //Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP

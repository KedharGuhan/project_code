-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgInput_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imgInput_data_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    imgInput_data_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    imgInput_data_empty_n : IN STD_LOGIC;
    imgInput_data_read : OUT STD_LOGIC;
    imgOutput_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    imgOutput_data_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    imgOutput_data_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    imgOutput_data_full_n : IN STD_LOGIC;
    imgOutput_data_write : OUT STD_LOGIC;
    src_kernel_win_5 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win : IN STD_LOGIC_VECTOR (7 downto 0);
    widthloop : IN STD_LOGIC_VECTOR (16 downto 0);
    cmp204 : IN STD_LOGIC_VECTOR (0 downto 0);
    zext_ln696 : IN STD_LOGIC_VECTOR (15 downto 0);
    brmerge30 : IN STD_LOGIC_VECTOR (0 downto 0);
    locy : IN STD_LOGIC_VECTOR (1 downto 0);
    cmp1_i18 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp179_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    empty_26 : IN STD_LOGIC_VECTOR (0 downto 0);
    locy_1 : IN STD_LOGIC_VECTOR (1 downto 0);
    empty_27 : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (0 downto 0);
    locy_2 : IN STD_LOGIC_VECTOR (1 downto 0);
    p_filter_kernel_0_0_val1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_0_1_val2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_0_2_val3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_1_0_val4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_1_1_val5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_1_2_val6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_2_0_val7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_2_1_val8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_filter_kernel_2_2_val9 : IN STD_LOGIC_VECTOR (15 downto 0);
    shift : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_11_out_ap_vld : OUT STD_LOGIC;
    src_kernel_win_10_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_10_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_10_out_o_ap_vld : OUT STD_LOGIC;
    src_kernel_win_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_9_out_ap_vld : OUT STD_LOGIC;
    src_kernel_win_8_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_8_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_8_out_o_ap_vld : OUT STD_LOGIC;
    src_kernel_win_7_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_7_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_7_out_o_ap_vld : OUT STD_LOGIC;
    src_kernel_win_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_kernel_win_6_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln709_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge30_read_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op103_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal and_ln794_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln709_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal imgInput_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal imgOutput_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_871 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln696_cast_fu_400_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln696_cast_reg_908 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln709_reg_914_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln709_reg_914_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_437_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_2_reg_918 : STD_LOGIC_VECTOR (15 downto 0);
    signal ImagLocx_fu_443_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ImagLocx_reg_923 : STD_LOGIC_VECTOR (15 downto 0);
    signal ImagLocx_reg_923_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_929 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_929_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_929_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_929_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_929_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_929_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln794_reg_934_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_reg_938_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_reg_938_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_reg_938_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln637_reg_938_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln765_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln765_reg_943 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln765_reg_943_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln765_reg_943_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln765_reg_943_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_948_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_948_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_addr_reg_955 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_1_addr_reg_961 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_1_addr_reg_961_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_1_addr_reg_961_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_2_addr_reg_967 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_2_addr_reg_967_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_2_addr_reg_967_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_load_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_1_load_reg_983 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_2_load_reg_988 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_10_fu_528_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_10_reg_993 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_11_fu_535_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_11_reg_998 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_9_fu_542_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_9_reg_1003 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_12_fu_548_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_12_reg_1008 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_14_fu_567_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_14_reg_1013 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_19_fu_586_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_19_reg_1018 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln765_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln765_reg_1023 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_6_reg_1030 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_6_reg_1030_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_7_reg_1037_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_8_reg_1044_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_reg_1081 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter6_stage0 : STD_LOGIC;
    signal k_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_ce0 : STD_LOGIC;
    signal k_buf_we0 : STD_LOGIC;
    signal k_buf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_ce1 : STD_LOGIC;
    signal k_buf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_1_ce0 : STD_LOGIC;
    signal k_buf_1_we0 : STD_LOGIC;
    signal k_buf_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_1_ce1 : STD_LOGIC;
    signal k_buf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_2_ce0 : STD_LOGIC;
    signal k_buf_2_we0 : STD_LOGIC;
    signal k_buf_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_2_ce1 : STD_LOGIC;
    signal grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce : STD_LOGIC;
    signal ap_predicate_op156_call_state8 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp156 : BOOLEAN;
    signal idxprom_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_138 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal src_kernel_win_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal src_kernel_win_13_fu_619_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_16_fu_669_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_2_fu_146 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal src_kernel_win_15_fu_629_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_17_fu_662_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_4_fu_150 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal src_kernel_win_18_fu_655_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln709_fu_427_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_457_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln794_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln637_fu_479_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln637_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln637_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal src_kernel_win_12_fu_548_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_14_fu_567_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_19_fu_586_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln783_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op107_store_state4 : BOOLEAN;
    signal ap_enable_operation_107 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_100 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_108 : BOOLEAN;
    signal ap_enable_state5_pp0_iter4_stage0 : BOOLEAN;
    signal ap_enable_operation_101 : BOOLEAN;
    signal ap_enable_operation_109 : BOOLEAN;
    signal ap_predicate_op121_store_state6 : BOOLEAN;
    signal ap_enable_operation_121 : BOOLEAN;
    signal ap_enable_state6_pp0_iter5_stage0 : BOOLEAN;
    signal ap_enable_operation_102 : BOOLEAN;
    signal ap_enable_operation_110 : BOOLEAN;
    signal ap_predicate_op120_store_state6 : BOOLEAN;
    signal ap_enable_operation_120 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1494 : BOOLEAN;
    signal ap_condition_1500 : BOOLEAN;
    signal ap_condition_1506 : BOOLEAN;
    signal ap_condition_1511 : BOOLEAN;
    signal ap_condition_1517 : BOOLEAN;
    signal ap_condition_1523 : BOOLEAN;
    signal src_kernel_win_12_fu_548_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_12_fu_548_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_12_fu_548_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_14_fu_567_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_14_fu_567_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_14_fu_567_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_19_fu_586_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_19_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_19_fu_586_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Filter2d_accel_xFApplyFilter2D_0_0_3_3_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_kernel_pixel_0_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_0_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_0_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_1_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_1_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_1_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_2_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_2_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_pixel_2_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        p_kernel_filter_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_0_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_1_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_1_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_1_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_2_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_2_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        p_kernel_filter_2_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        shift : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component Filter2d_accel_sparsemux_7_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2d_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    k_buf_U : component Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_address0,
        ce0 => k_buf_ce0,
        we0 => k_buf_we0,
        d0 => temp_reg_973,
        address1 => k_buf_address1,
        ce1 => k_buf_ce1,
        q1 => k_buf_q1);

    k_buf_1_U : component Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_1_address0,
        ce0 => k_buf_1_ce0,
        we0 => k_buf_1_we0,
        d0 => src_kernel_win_11_fu_535_p3,
        address1 => k_buf_1_address1,
        ce1 => k_buf_1_ce1,
        q1 => k_buf_1_q1);

    k_buf_2_U : component Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_2R1W
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_2_address0,
        ce0 => k_buf_2_ce0,
        we0 => k_buf_2_we0,
        d0 => src_kernel_win_10_fu_528_p3,
        address1 => k_buf_2_address1,
        ce1 => k_buf_2_ce1,
        q1 => k_buf_2_q1);

    grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377 : component Filter2d_accel_xFApplyFilter2D_0_0_3_3_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_kernel_pixel_0_0_val => src_kernel_win_1_fu_142,
        p_kernel_pixel_0_1_val => src_kernel_win_6_reg_1030,
        p_kernel_pixel_0_2_val => src_kernel_win_7_out_i,
        p_kernel_pixel_1_0_val => src_kernel_win_2_fu_146,
        p_kernel_pixel_1_1_val => src_kernel_win_7_reg_1037,
        p_kernel_pixel_1_2_val => src_kernel_win_10_out_i,
        p_kernel_pixel_2_0_val => src_kernel_win_4_fu_150,
        p_kernel_pixel_2_1_val => src_kernel_win_8_reg_1044,
        p_kernel_pixel_2_2_val => src_kernel_win_8_out_i,
        p_kernel_filter_0_0_val => p_filter_kernel_0_0_val1,
        p_kernel_filter_0_1_val => p_filter_kernel_0_1_val2,
        p_kernel_filter_0_2_val => p_filter_kernel_0_2_val3,
        p_kernel_filter_1_0_val => p_filter_kernel_1_0_val4,
        p_kernel_filter_1_1_val => p_filter_kernel_1_1_val5,
        p_kernel_filter_1_2_val => p_filter_kernel_1_2_val6,
        p_kernel_filter_2_0_val => p_filter_kernel_2_0_val7,
        p_kernel_filter_2_1_val => p_filter_kernel_2_1_val8,
        p_kernel_filter_2_2_val => p_filter_kernel_2_2_val9,
        shift => shift,
        ap_return => grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return,
        ap_ce => grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce);

    sparsemux_7_2_8_1_1_U115 : component Filter2d_accel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => src_kernel_win_11_fu_535_p3,
        din1 => src_kernel_win_10_fu_528_p3,
        din2 => src_kernel_win_9_fu_542_p3,
        def => src_kernel_win_12_fu_548_p7,
        sel => locy,
        dout => src_kernel_win_12_fu_548_p9);

    sparsemux_7_2_8_1_1_U116 : component Filter2d_accel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => src_kernel_win_11_fu_535_p3,
        din1 => src_kernel_win_10_fu_528_p3,
        din2 => src_kernel_win_9_fu_542_p3,
        def => src_kernel_win_14_fu_567_p7,
        sel => locy_1,
        dout => src_kernel_win_14_fu_567_p9);

    sparsemux_7_2_8_1_1_U117 : component Filter2d_accel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => src_kernel_win_11_fu_535_p3,
        din1 => src_kernel_win_10_fu_528_p3,
        din2 => src_kernel_win_9_fu_542_p3,
        def => src_kernel_win_19_fu_586_p7,
        sel => locy_2,
        dout => src_kernel_win_19_fu_586_p9);

    flow_control_loop_pipe_sequential_init_U : component Filter2d_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter27_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage0)) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    j_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_138 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln709_reg_914 = ap_const_lv1_1))) then 
                    j_fu_138 <= j_2_reg_918;
                end if;
            end if; 
        end if;
    end process;

    src_kernel_win_1_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    src_kernel_win_1_fu_142 <= src_kernel_win;
                elsif ((ap_const_boolean_1 = ap_condition_1511)) then 
                    src_kernel_win_1_fu_142 <= src_kernel_win_11_reg_998;
                elsif ((ap_const_boolean_1 = ap_condition_1506)) then 
                    src_kernel_win_1_fu_142 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_condition_1500)) then 
                    src_kernel_win_1_fu_142 <= src_kernel_win_16_fu_669_p3;
                elsif ((ap_const_boolean_1 = ap_condition_1494)) then 
                    src_kernel_win_1_fu_142 <= src_kernel_win_13_fu_619_p3;
                end if;
            end if; 
        end if;
    end process;

    src_kernel_win_2_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    src_kernel_win_2_fu_146 <= src_kernel_win_3;
                elsif ((ap_const_boolean_1 = ap_condition_1511)) then 
                    src_kernel_win_2_fu_146 <= src_kernel_win_10_reg_993;
                elsif ((ap_const_boolean_1 = ap_condition_1506)) then 
                    src_kernel_win_2_fu_146 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_condition_1500)) then 
                    src_kernel_win_2_fu_146 <= src_kernel_win_17_fu_662_p3;
                elsif ((ap_const_boolean_1 = ap_condition_1494)) then 
                    src_kernel_win_2_fu_146 <= src_kernel_win_15_fu_629_p3;
                end if;
            end if; 
        end if;
    end process;

    src_kernel_win_4_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    src_kernel_win_4_fu_150 <= src_kernel_win_5;
                elsif ((ap_const_boolean_1 = ap_condition_1511)) then 
                    src_kernel_win_4_fu_150 <= src_kernel_win_9_reg_1003;
                elsif ((ap_const_boolean_1 = ap_condition_1506)) then 
                    src_kernel_win_4_fu_150 <= ap_const_lv8_0_2;
                elsif ((ap_const_boolean_1 = ap_condition_1500)) then 
                    src_kernel_win_4_fu_150 <= src_kernel_win_18_fu_655_p3;
                elsif ((ap_const_boolean_1 = ap_condition_1523)) then 
                    src_kernel_win_4_fu_150 <= src_kernel_win_19_reg_1018;
                elsif ((ap_const_boolean_1 = ap_condition_1517)) then 
                    src_kernel_win_4_fu_150 <= ap_const_lv8_0_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLocx_reg_923 <= ImagLocx_fu_443_p2;
                ImagLocx_reg_923_pp0_iter1_reg <= ImagLocx_reg_923;
                and_ln637_reg_938 <= and_ln637_fu_492_p2;
                and_ln794_reg_934 <= and_ln794_fu_473_p2;
                and_ln794_reg_934_pp0_iter1_reg <= and_ln794_reg_934;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln709_reg_914 <= icmp_ln709_fu_431_p2;
                icmp_ln709_reg_914_pp0_iter1_reg <= icmp_ln709_reg_914;
                icmp_ln765_reg_943 <= icmp_ln765_fu_498_p2;
                j_2_reg_918 <= j_2_fu_437_p2;
                tmp_3_reg_929 <= ImagLocx_fu_443_p2(15 downto 15);
                tmp_3_reg_929_pp0_iter1_reg <= tmp_3_reg_929;
                    zext_ln696_cast_reg_908(15 downto 0) <= zext_ln696_cast_fu_400_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln637_reg_938_pp0_iter2_reg <= and_ln637_reg_938;
                and_ln637_reg_938_pp0_iter3_reg <= and_ln637_reg_938_pp0_iter2_reg;
                and_ln637_reg_938_pp0_iter4_reg <= and_ln637_reg_938_pp0_iter3_reg;
                and_ln637_reg_938_pp0_iter5_reg <= and_ln637_reg_938_pp0_iter4_reg;
                and_ln794_reg_934_pp0_iter10_reg <= and_ln794_reg_934_pp0_iter9_reg;
                and_ln794_reg_934_pp0_iter11_reg <= and_ln794_reg_934_pp0_iter10_reg;
                and_ln794_reg_934_pp0_iter12_reg <= and_ln794_reg_934_pp0_iter11_reg;
                and_ln794_reg_934_pp0_iter13_reg <= and_ln794_reg_934_pp0_iter12_reg;
                and_ln794_reg_934_pp0_iter14_reg <= and_ln794_reg_934_pp0_iter13_reg;
                and_ln794_reg_934_pp0_iter15_reg <= and_ln794_reg_934_pp0_iter14_reg;
                and_ln794_reg_934_pp0_iter16_reg <= and_ln794_reg_934_pp0_iter15_reg;
                and_ln794_reg_934_pp0_iter17_reg <= and_ln794_reg_934_pp0_iter16_reg;
                and_ln794_reg_934_pp0_iter18_reg <= and_ln794_reg_934_pp0_iter17_reg;
                and_ln794_reg_934_pp0_iter19_reg <= and_ln794_reg_934_pp0_iter18_reg;
                and_ln794_reg_934_pp0_iter20_reg <= and_ln794_reg_934_pp0_iter19_reg;
                and_ln794_reg_934_pp0_iter21_reg <= and_ln794_reg_934_pp0_iter20_reg;
                and_ln794_reg_934_pp0_iter22_reg <= and_ln794_reg_934_pp0_iter21_reg;
                and_ln794_reg_934_pp0_iter23_reg <= and_ln794_reg_934_pp0_iter22_reg;
                and_ln794_reg_934_pp0_iter24_reg <= and_ln794_reg_934_pp0_iter23_reg;
                and_ln794_reg_934_pp0_iter25_reg <= and_ln794_reg_934_pp0_iter24_reg;
                and_ln794_reg_934_pp0_iter26_reg <= and_ln794_reg_934_pp0_iter25_reg;
                and_ln794_reg_934_pp0_iter27_reg <= and_ln794_reg_934_pp0_iter26_reg;
                and_ln794_reg_934_pp0_iter2_reg <= and_ln794_reg_934_pp0_iter1_reg;
                and_ln794_reg_934_pp0_iter3_reg <= and_ln794_reg_934_pp0_iter2_reg;
                and_ln794_reg_934_pp0_iter4_reg <= and_ln794_reg_934_pp0_iter3_reg;
                and_ln794_reg_934_pp0_iter5_reg <= and_ln794_reg_934_pp0_iter4_reg;
                and_ln794_reg_934_pp0_iter6_reg <= and_ln794_reg_934_pp0_iter5_reg;
                and_ln794_reg_934_pp0_iter7_reg <= and_ln794_reg_934_pp0_iter6_reg;
                and_ln794_reg_934_pp0_iter8_reg <= and_ln794_reg_934_pp0_iter7_reg;
                and_ln794_reg_934_pp0_iter9_reg <= and_ln794_reg_934_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln709_reg_914_pp0_iter10_reg <= icmp_ln709_reg_914_pp0_iter9_reg;
                icmp_ln709_reg_914_pp0_iter11_reg <= icmp_ln709_reg_914_pp0_iter10_reg;
                icmp_ln709_reg_914_pp0_iter12_reg <= icmp_ln709_reg_914_pp0_iter11_reg;
                icmp_ln709_reg_914_pp0_iter13_reg <= icmp_ln709_reg_914_pp0_iter12_reg;
                icmp_ln709_reg_914_pp0_iter14_reg <= icmp_ln709_reg_914_pp0_iter13_reg;
                icmp_ln709_reg_914_pp0_iter15_reg <= icmp_ln709_reg_914_pp0_iter14_reg;
                icmp_ln709_reg_914_pp0_iter16_reg <= icmp_ln709_reg_914_pp0_iter15_reg;
                icmp_ln709_reg_914_pp0_iter17_reg <= icmp_ln709_reg_914_pp0_iter16_reg;
                icmp_ln709_reg_914_pp0_iter18_reg <= icmp_ln709_reg_914_pp0_iter17_reg;
                icmp_ln709_reg_914_pp0_iter19_reg <= icmp_ln709_reg_914_pp0_iter18_reg;
                icmp_ln709_reg_914_pp0_iter20_reg <= icmp_ln709_reg_914_pp0_iter19_reg;
                icmp_ln709_reg_914_pp0_iter21_reg <= icmp_ln709_reg_914_pp0_iter20_reg;
                icmp_ln709_reg_914_pp0_iter22_reg <= icmp_ln709_reg_914_pp0_iter21_reg;
                icmp_ln709_reg_914_pp0_iter23_reg <= icmp_ln709_reg_914_pp0_iter22_reg;
                icmp_ln709_reg_914_pp0_iter24_reg <= icmp_ln709_reg_914_pp0_iter23_reg;
                icmp_ln709_reg_914_pp0_iter25_reg <= icmp_ln709_reg_914_pp0_iter24_reg;
                icmp_ln709_reg_914_pp0_iter26_reg <= icmp_ln709_reg_914_pp0_iter25_reg;
                icmp_ln709_reg_914_pp0_iter2_reg <= icmp_ln709_reg_914_pp0_iter1_reg;
                icmp_ln709_reg_914_pp0_iter3_reg <= icmp_ln709_reg_914_pp0_iter2_reg;
                icmp_ln709_reg_914_pp0_iter4_reg <= icmp_ln709_reg_914_pp0_iter3_reg;
                icmp_ln709_reg_914_pp0_iter5_reg <= icmp_ln709_reg_914_pp0_iter4_reg;
                icmp_ln709_reg_914_pp0_iter6_reg <= icmp_ln709_reg_914_pp0_iter5_reg;
                icmp_ln709_reg_914_pp0_iter7_reg <= icmp_ln709_reg_914_pp0_iter6_reg;
                icmp_ln709_reg_914_pp0_iter8_reg <= icmp_ln709_reg_914_pp0_iter7_reg;
                icmp_ln709_reg_914_pp0_iter9_reg <= icmp_ln709_reg_914_pp0_iter8_reg;
                icmp_ln765_reg_943_pp0_iter2_reg <= icmp_ln765_reg_943;
                icmp_ln765_reg_943_pp0_iter3_reg <= icmp_ln765_reg_943_pp0_iter2_reg;
                icmp_ln765_reg_943_pp0_iter4_reg <= icmp_ln765_reg_943_pp0_iter3_reg;
                k_buf_1_addr_reg_961 <= idxprom_fu_521_p1(7 - 1 downto 0);
                k_buf_1_addr_reg_961_pp0_iter3_reg <= k_buf_1_addr_reg_961;
                k_buf_1_addr_reg_961_pp0_iter4_reg <= k_buf_1_addr_reg_961_pp0_iter3_reg;
                k_buf_2_addr_reg_967 <= idxprom_fu_521_p1(7 - 1 downto 0);
                k_buf_2_addr_reg_967_pp0_iter3_reg <= k_buf_2_addr_reg_967;
                k_buf_2_addr_reg_967_pp0_iter4_reg <= k_buf_2_addr_reg_967_pp0_iter3_reg;
                k_buf_addr_reg_955 <= idxprom_fu_521_p1(7 - 1 downto 0);
                src_kernel_win_10_reg_993 <= src_kernel_win_10_fu_528_p3;
                src_kernel_win_11_reg_998 <= src_kernel_win_11_fu_535_p3;
                src_kernel_win_12_reg_1008 <= src_kernel_win_12_fu_548_p9;
                src_kernel_win_14_reg_1013 <= src_kernel_win_14_fu_567_p9;
                src_kernel_win_19_reg_1018 <= src_kernel_win_19_fu_586_p9;
                src_kernel_win_6_reg_1030_pp0_iter10_reg <= src_kernel_win_6_reg_1030_pp0_iter9_reg;
                src_kernel_win_6_reg_1030_pp0_iter11_reg <= src_kernel_win_6_reg_1030_pp0_iter10_reg;
                src_kernel_win_6_reg_1030_pp0_iter12_reg <= src_kernel_win_6_reg_1030_pp0_iter11_reg;
                src_kernel_win_6_reg_1030_pp0_iter13_reg <= src_kernel_win_6_reg_1030_pp0_iter12_reg;
                src_kernel_win_6_reg_1030_pp0_iter14_reg <= src_kernel_win_6_reg_1030_pp0_iter13_reg;
                src_kernel_win_6_reg_1030_pp0_iter15_reg <= src_kernel_win_6_reg_1030_pp0_iter14_reg;
                src_kernel_win_6_reg_1030_pp0_iter16_reg <= src_kernel_win_6_reg_1030_pp0_iter15_reg;
                src_kernel_win_6_reg_1030_pp0_iter17_reg <= src_kernel_win_6_reg_1030_pp0_iter16_reg;
                src_kernel_win_6_reg_1030_pp0_iter18_reg <= src_kernel_win_6_reg_1030_pp0_iter17_reg;
                src_kernel_win_6_reg_1030_pp0_iter19_reg <= src_kernel_win_6_reg_1030_pp0_iter18_reg;
                src_kernel_win_6_reg_1030_pp0_iter20_reg <= src_kernel_win_6_reg_1030_pp0_iter19_reg;
                src_kernel_win_6_reg_1030_pp0_iter21_reg <= src_kernel_win_6_reg_1030_pp0_iter20_reg;
                src_kernel_win_6_reg_1030_pp0_iter22_reg <= src_kernel_win_6_reg_1030_pp0_iter21_reg;
                src_kernel_win_6_reg_1030_pp0_iter23_reg <= src_kernel_win_6_reg_1030_pp0_iter22_reg;
                src_kernel_win_6_reg_1030_pp0_iter24_reg <= src_kernel_win_6_reg_1030_pp0_iter23_reg;
                src_kernel_win_6_reg_1030_pp0_iter25_reg <= src_kernel_win_6_reg_1030_pp0_iter24_reg;
                src_kernel_win_6_reg_1030_pp0_iter26_reg <= src_kernel_win_6_reg_1030_pp0_iter25_reg;
                src_kernel_win_6_reg_1030_pp0_iter7_reg <= src_kernel_win_6_reg_1030;
                src_kernel_win_6_reg_1030_pp0_iter8_reg <= src_kernel_win_6_reg_1030_pp0_iter7_reg;
                src_kernel_win_6_reg_1030_pp0_iter9_reg <= src_kernel_win_6_reg_1030_pp0_iter8_reg;
                src_kernel_win_7_reg_1037_pp0_iter10_reg <= src_kernel_win_7_reg_1037_pp0_iter9_reg;
                src_kernel_win_7_reg_1037_pp0_iter11_reg <= src_kernel_win_7_reg_1037_pp0_iter10_reg;
                src_kernel_win_7_reg_1037_pp0_iter12_reg <= src_kernel_win_7_reg_1037_pp0_iter11_reg;
                src_kernel_win_7_reg_1037_pp0_iter13_reg <= src_kernel_win_7_reg_1037_pp0_iter12_reg;
                src_kernel_win_7_reg_1037_pp0_iter14_reg <= src_kernel_win_7_reg_1037_pp0_iter13_reg;
                src_kernel_win_7_reg_1037_pp0_iter15_reg <= src_kernel_win_7_reg_1037_pp0_iter14_reg;
                src_kernel_win_7_reg_1037_pp0_iter16_reg <= src_kernel_win_7_reg_1037_pp0_iter15_reg;
                src_kernel_win_7_reg_1037_pp0_iter17_reg <= src_kernel_win_7_reg_1037_pp0_iter16_reg;
                src_kernel_win_7_reg_1037_pp0_iter18_reg <= src_kernel_win_7_reg_1037_pp0_iter17_reg;
                src_kernel_win_7_reg_1037_pp0_iter19_reg <= src_kernel_win_7_reg_1037_pp0_iter18_reg;
                src_kernel_win_7_reg_1037_pp0_iter20_reg <= src_kernel_win_7_reg_1037_pp0_iter19_reg;
                src_kernel_win_7_reg_1037_pp0_iter21_reg <= src_kernel_win_7_reg_1037_pp0_iter20_reg;
                src_kernel_win_7_reg_1037_pp0_iter22_reg <= src_kernel_win_7_reg_1037_pp0_iter21_reg;
                src_kernel_win_7_reg_1037_pp0_iter23_reg <= src_kernel_win_7_reg_1037_pp0_iter22_reg;
                src_kernel_win_7_reg_1037_pp0_iter24_reg <= src_kernel_win_7_reg_1037_pp0_iter23_reg;
                src_kernel_win_7_reg_1037_pp0_iter25_reg <= src_kernel_win_7_reg_1037_pp0_iter24_reg;
                src_kernel_win_7_reg_1037_pp0_iter26_reg <= src_kernel_win_7_reg_1037_pp0_iter25_reg;
                src_kernel_win_7_reg_1037_pp0_iter7_reg <= src_kernel_win_7_reg_1037;
                src_kernel_win_7_reg_1037_pp0_iter8_reg <= src_kernel_win_7_reg_1037_pp0_iter7_reg;
                src_kernel_win_7_reg_1037_pp0_iter9_reg <= src_kernel_win_7_reg_1037_pp0_iter8_reg;
                src_kernel_win_8_reg_1044_pp0_iter10_reg <= src_kernel_win_8_reg_1044_pp0_iter9_reg;
                src_kernel_win_8_reg_1044_pp0_iter11_reg <= src_kernel_win_8_reg_1044_pp0_iter10_reg;
                src_kernel_win_8_reg_1044_pp0_iter12_reg <= src_kernel_win_8_reg_1044_pp0_iter11_reg;
                src_kernel_win_8_reg_1044_pp0_iter13_reg <= src_kernel_win_8_reg_1044_pp0_iter12_reg;
                src_kernel_win_8_reg_1044_pp0_iter14_reg <= src_kernel_win_8_reg_1044_pp0_iter13_reg;
                src_kernel_win_8_reg_1044_pp0_iter15_reg <= src_kernel_win_8_reg_1044_pp0_iter14_reg;
                src_kernel_win_8_reg_1044_pp0_iter16_reg <= src_kernel_win_8_reg_1044_pp0_iter15_reg;
                src_kernel_win_8_reg_1044_pp0_iter17_reg <= src_kernel_win_8_reg_1044_pp0_iter16_reg;
                src_kernel_win_8_reg_1044_pp0_iter18_reg <= src_kernel_win_8_reg_1044_pp0_iter17_reg;
                src_kernel_win_8_reg_1044_pp0_iter19_reg <= src_kernel_win_8_reg_1044_pp0_iter18_reg;
                src_kernel_win_8_reg_1044_pp0_iter20_reg <= src_kernel_win_8_reg_1044_pp0_iter19_reg;
                src_kernel_win_8_reg_1044_pp0_iter21_reg <= src_kernel_win_8_reg_1044_pp0_iter20_reg;
                src_kernel_win_8_reg_1044_pp0_iter22_reg <= src_kernel_win_8_reg_1044_pp0_iter21_reg;
                src_kernel_win_8_reg_1044_pp0_iter23_reg <= src_kernel_win_8_reg_1044_pp0_iter22_reg;
                src_kernel_win_8_reg_1044_pp0_iter24_reg <= src_kernel_win_8_reg_1044_pp0_iter23_reg;
                src_kernel_win_8_reg_1044_pp0_iter25_reg <= src_kernel_win_8_reg_1044_pp0_iter24_reg;
                src_kernel_win_8_reg_1044_pp0_iter26_reg <= src_kernel_win_8_reg_1044_pp0_iter25_reg;
                src_kernel_win_8_reg_1044_pp0_iter7_reg <= src_kernel_win_8_reg_1044;
                src_kernel_win_8_reg_1044_pp0_iter8_reg <= src_kernel_win_8_reg_1044_pp0_iter7_reg;
                src_kernel_win_8_reg_1044_pp0_iter9_reg <= src_kernel_win_8_reg_1044_pp0_iter8_reg;
                src_kernel_win_9_reg_1003 <= src_kernel_win_9_fu_542_p3;
                temp_1_reg_1081 <= grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_return;
                temp_reg_973 <= imgInput_data_dout;
                tmp_3_reg_929_pp0_iter2_reg <= tmp_3_reg_929_pp0_iter1_reg;
                tmp_3_reg_929_pp0_iter3_reg <= tmp_3_reg_929_pp0_iter2_reg;
                tmp_3_reg_929_pp0_iter4_reg <= tmp_3_reg_929_pp0_iter3_reg;
                tmp_3_reg_929_pp0_iter5_reg <= tmp_3_reg_929_pp0_iter4_reg;
                tmp_4_reg_948 <= x_fu_507_p3(15 downto 15);
                tmp_4_reg_948_pp0_iter3_reg <= tmp_4_reg_948;
                tmp_4_reg_948_pp0_iter4_reg <= tmp_4_reg_948_pp0_iter3_reg;
                xor_ln765_reg_1023 <= xor_ln765_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_1_load_reg_983 <= k_buf_1_q1;
                k_buf_2_load_reg_988 <= k_buf_2_q1;
                k_buf_load_reg_978 <= k_buf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_6_reg_1030 <= src_kernel_win_1_fu_142;
                src_kernel_win_7_reg_1037 <= src_kernel_win_2_fu_146;
                src_kernel_win_8_reg_1044 <= src_kernel_win_4_fu_150;
            end if;
        end if;
    end process;
    zext_ln696_cast_reg_908(16) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ImagLocx_fu_443_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv16_FFFF));
    and_ln637_fu_492_p2 <= (xor_ln637_fu_482_p2 and icmp_ln637_fu_487_p2);
    and_ln794_fu_473_p2 <= (icmp_ln794_fu_467_p2 and cmp204);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter28, ap_block_state3_pp0_stage0_iter2, ap_block_state29_pp0_stage0_iter28)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_boolean_1 = ap_block_state29_pp0_stage0_iter28) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter28, ap_block_state3_pp0_stage0_iter2, ap_block_state29_pp0_stage0_iter28)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state29_pp0_stage0_iter28) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp156_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter28, ap_block_state3_pp0_stage0_iter2_ignore_call6, ap_block_state29_pp0_stage0_iter28_ignore_call6)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp156 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_ignore_call6)) or ((ap_const_boolean_1 = ap_block_state29_pp0_stage0_iter28_ignore_call6) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter28, ap_block_state3_pp0_stage0_iter2, ap_block_state29_pp0_stage0_iter28)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state29_pp0_stage0_iter28) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)));
    end process;


    ap_block_state29_pp0_stage0_iter28_assign_proc : process(imgOutput_data_full_n, and_ln794_reg_934_pp0_iter27_reg)
    begin
                ap_block_state29_pp0_stage0_iter28 <= ((imgOutput_data_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln794_reg_934_pp0_iter27_reg));
    end process;


    ap_block_state29_pp0_stage0_iter28_ignore_call6_assign_proc : process(imgOutput_data_full_n, and_ln794_reg_934_pp0_iter27_reg)
    begin
                ap_block_state29_pp0_stage0_iter28_ignore_call6 <= ((imgOutput_data_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln794_reg_934_pp0_iter27_reg));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(imgInput_data_empty_n, ap_predicate_op103_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op103_read_state3 = ap_const_boolean_1) and (imgInput_data_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_ignore_call6_assign_proc : process(imgInput_data_empty_n, ap_predicate_op103_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter2_ignore_call6 <= ((ap_predicate_op103_read_state3 = ap_const_boolean_1) and (imgInput_data_empty_n = ap_const_logic_0));
    end process;


    ap_condition_1494_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30_read_reg_904, tmp_reg_871, icmp_ln709_reg_914_pp0_iter5_reg)
    begin
                ap_condition_1494 <= ((icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (tmp_reg_871 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (brmerge30_read_reg_904 = ap_const_lv1_0));
    end process;


    ap_condition_1500_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30, icmp_ln709_reg_914_pp0_iter5_reg, tmp_3_reg_929_pp0_iter5_reg, and_ln637_reg_938_pp0_iter5_reg)
    begin
                ap_condition_1500 <= ((tmp_3_reg_929_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln637_reg_938_pp0_iter5_reg) and (brmerge30 = ap_const_lv1_1));
    end process;


    ap_condition_1506_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30, icmp_ln709_reg_914_pp0_iter5_reg, tmp_3_reg_929_pp0_iter5_reg, and_ln637_reg_938_pp0_iter5_reg)
    begin
                ap_condition_1506 <= ((tmp_3_reg_929_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln637_reg_938_pp0_iter5_reg) and (brmerge30 = ap_const_lv1_1));
    end process;


    ap_condition_1511_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30, icmp_ln709_reg_914_pp0_iter5_reg, and_ln637_reg_938_pp0_iter5_reg)
    begin
                ap_condition_1511 <= ((icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter5_reg));
    end process;


    ap_condition_1517_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30_read_reg_904, tmp_reg_871, tmp_1_reg_875, icmp_ln709_reg_914_pp0_iter5_reg)
    begin
                ap_condition_1517 <= ((icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (tmp_1_reg_875 = ap_const_lv1_0) and (tmp_reg_871 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (brmerge30_read_reg_904 = ap_const_lv1_0));
    end process;


    ap_condition_1523_assign_proc : process(ap_enable_reg_pp0_iter6, brmerge30_read_reg_904, tmp_reg_871, tmp_1_reg_875, icmp_ln709_reg_914_pp0_iter5_reg)
    begin
                ap_condition_1523 <= ((icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_1) and (tmp_1_reg_875 = ap_const_lv1_1) and (tmp_reg_871 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (brmerge30_read_reg_904 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln709_fu_431_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln709_fu_431_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, icmp_ln709_reg_914_pp0_iter5_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter27_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter27_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_100_assign_proc : process(icmp_ln709_reg_914_pp0_iter1_reg)
    begin
                ap_enable_operation_100 <= (icmp_ln709_reg_914_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_101_assign_proc : process(icmp_ln709_reg_914_pp0_iter1_reg)
    begin
                ap_enable_operation_101 <= (icmp_ln709_reg_914_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_102_assign_proc : process(icmp_ln709_reg_914_pp0_iter1_reg)
    begin
                ap_enable_operation_102 <= (icmp_ln709_reg_914_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_107_assign_proc : process(ap_predicate_op107_store_state4)
    begin
                ap_enable_operation_107 <= (ap_predicate_op107_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_108_assign_proc : process(icmp_ln709_reg_914_pp0_iter3_reg)
    begin
                ap_enable_operation_108 <= (icmp_ln709_reg_914_pp0_iter3_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_109_assign_proc : process(icmp_ln709_reg_914_pp0_iter3_reg)
    begin
                ap_enable_operation_109 <= (icmp_ln709_reg_914_pp0_iter3_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_110_assign_proc : process(icmp_ln709_reg_914_pp0_iter3_reg)
    begin
                ap_enable_operation_110 <= (icmp_ln709_reg_914_pp0_iter3_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_120_assign_proc : process(ap_predicate_op120_store_state6)
    begin
                ap_enable_operation_120 <= (ap_predicate_op120_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_121_assign_proc : process(ap_predicate_op121_store_state6)
    begin
                ap_enable_operation_121 <= (ap_predicate_op121_store_state6 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state5_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state6_pp0_iter5_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5)
    begin
                ap_enable_state6_pp0_iter5_stage0 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op103_read_state3_assign_proc : process(icmp_ln709_reg_914_pp0_iter1_reg, and_ln637_reg_938, brmerge30)
    begin
                ap_predicate_op103_read_state3 <= ((brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938) and (icmp_ln709_reg_914_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op107_store_state4_assign_proc : process(brmerge30, icmp_ln709_reg_914_pp0_iter2_reg, and_ln637_reg_938_pp0_iter2_reg)
    begin
                ap_predicate_op107_store_state4 <= ((icmp_ln709_reg_914_pp0_iter2_reg = ap_const_lv1_1) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter2_reg));
    end process;


    ap_predicate_op120_store_state6_assign_proc : process(brmerge30, icmp_ln709_reg_914_pp0_iter4_reg, and_ln637_reg_938_pp0_iter4_reg)
    begin
                ap_predicate_op120_store_state6 <= ((icmp_ln709_reg_914_pp0_iter4_reg = ap_const_lv1_1) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter4_reg));
    end process;


    ap_predicate_op121_store_state6_assign_proc : process(brmerge30, icmp_ln709_reg_914_pp0_iter4_reg, and_ln637_reg_938_pp0_iter4_reg)
    begin
                ap_predicate_op121_store_state6 <= ((icmp_ln709_reg_914_pp0_iter4_reg = ap_const_lv1_1) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter4_reg));
    end process;


    ap_predicate_op156_call_state8_assign_proc : process(icmp_ln709_reg_914_pp0_iter6_reg, and_ln794_reg_934_pp0_iter6_reg)
    begin
                ap_predicate_op156_call_state8 <= ((icmp_ln709_reg_914_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln794_reg_934_pp0_iter6_reg));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln709_reg_914, ap_block_pp0_stage0, j_2_reg_918, j_fu_138, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_sig_allocacmp_j_1 <= ap_const_lv16_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln709_reg_914 = ap_const_lv1_1))) then 
                ap_sig_allocacmp_j_1 <= j_2_reg_918;
            else 
                ap_sig_allocacmp_j_1 <= j_fu_138;
            end if;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_138;
        end if; 
    end process;

    brmerge30_read_reg_904 <= brmerge30;

    grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp156)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp156))) then 
            grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce <= ap_const_logic_1;
        else 
            grp_xFApplyFilter2D_0_0_3_3_1_s_fu_377_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln637_fu_487_p2 <= "1" when (signed(sext_ln637_fu_479_p1) < signed(zext_ln696_cast_reg_908)) else "0";
    icmp_ln709_fu_431_p2 <= "1" when (unsigned(widthloop) > unsigned(zext_ln709_fu_427_p1)) else "0";
    icmp_ln765_fu_498_p2 <= "1" when (signed(sext_ln637_fu_479_p1) < signed(zext_ln696_cast_reg_908)) else "0";
    icmp_ln794_fu_467_p2 <= "0" when (tmp_5_fu_457_p4 = ap_const_lv15_0) else "1";
    idxprom_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_507_p3),64));

    imgInput_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, imgInput_data_empty_n, ap_predicate_op103_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op103_read_state3 = ap_const_boolean_1))) then 
            imgInput_data_blk_n <= imgInput_data_empty_n;
        else 
            imgInput_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgInput_data_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op103_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op103_read_state3 = ap_const_boolean_1))) then 
            imgInput_data_read <= ap_const_logic_1;
        else 
            imgInput_data_read <= ap_const_logic_0;
        end if; 
    end process;


    imgOutput_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter28, imgOutput_data_full_n, and_ln794_reg_934_pp0_iter27_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln794_reg_934_pp0_iter27_reg) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            imgOutput_data_blk_n <= imgOutput_data_full_n;
        else 
            imgOutput_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgOutput_data_din <= temp_1_reg_1081;

    imgOutput_data_write_assign_proc : process(ap_enable_reg_pp0_iter28, and_ln794_reg_934_pp0_iter27_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln794_reg_934_pp0_iter27_reg) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            imgOutput_data_write <= ap_const_logic_1;
        else 
            imgOutput_data_write <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_437_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv16_1));
    k_buf_1_address0 <= k_buf_1_addr_reg_961_pp0_iter4_reg;
    k_buf_1_address1 <= idxprom_fu_521_p1(7 - 1 downto 0);

    k_buf_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_1_ce0 <= ap_const_logic_1;
        else 
            k_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_1_ce1 <= ap_const_logic_1;
        else 
            k_buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_1_we0_assign_proc : process(ap_enable_reg_pp0_iter5, brmerge30, ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter4_reg, and_ln637_reg_938_pp0_iter4_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter4_reg))) then 
            k_buf_1_we0 <= ap_const_logic_1;
        else 
            k_buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_2_address0 <= k_buf_2_addr_reg_967_pp0_iter4_reg;
    k_buf_2_address1 <= idxprom_fu_521_p1(7 - 1 downto 0);

    k_buf_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_2_ce0 <= ap_const_logic_1;
        else 
            k_buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_2_ce1 <= ap_const_logic_1;
        else 
            k_buf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_2_we0_assign_proc : process(ap_enable_reg_pp0_iter5, brmerge30, ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter4_reg, and_ln637_reg_938_pp0_iter4_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter4_reg))) then 
            k_buf_2_we0 <= ap_const_logic_1;
        else 
            k_buf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_address0 <= k_buf_addr_reg_955;
    k_buf_address1 <= idxprom_fu_521_p1(7 - 1 downto 0);

    k_buf_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_ce0 <= ap_const_logic_1;
        else 
            k_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_ce1 <= ap_const_logic_1;
        else 
            k_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_we0_assign_proc : process(ap_enable_reg_pp0_iter3, brmerge30, ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter2_reg, and_ln637_reg_938_pp0_iter2_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge30 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln637_reg_938_pp0_iter2_reg))) then 
            k_buf_we0 <= ap_const_logic_1;
        else 
            k_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln783_fu_625_p2 <= (empty_26 or cmp179_1);
        sext_ln637_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLocx_reg_923),17));

    src_kernel_win_10_fu_528_p3 <= 
        ap_const_lv8_0 when (tmp_4_reg_948_pp0_iter4_reg(0) = '1') else 
        k_buf_1_load_reg_983;

    src_kernel_win_10_out_o_assign_proc : process(ap_enable_reg_pp0_iter7, src_kernel_win_10_out_i, ap_block_pp0_stage0, src_kernel_win_7_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            src_kernel_win_10_out_o <= src_kernel_win_7_reg_1037;
        else 
            src_kernel_win_10_out_o <= src_kernel_win_10_out_i;
        end if; 
    end process;


    src_kernel_win_10_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_10_out_o_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_10_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    src_kernel_win_11_fu_535_p3 <= 
        ap_const_lv8_0 when (tmp_4_reg_948_pp0_iter4_reg(0) = '1') else 
        k_buf_load_reg_978;
    src_kernel_win_11_out <= src_kernel_win_8_reg_1044_pp0_iter26_reg;

    src_kernel_win_11_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter26_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_11_out_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    src_kernel_win_12_fu_548_p7 <= "XXXXXXXX";
    src_kernel_win_13_fu_619_p3 <= 
        src_kernel_win_12_reg_1008 when (cmp1_i18(0) = '1') else 
        ap_const_lv8_0;
    src_kernel_win_14_fu_567_p7 <= "XXXXXXXX";
    src_kernel_win_15_fu_629_p3 <= 
        ap_const_lv8_0 when (or_ln783_fu_625_p2(0) = '1') else 
        src_kernel_win_14_reg_1013;
    src_kernel_win_16_fu_669_p3 <= 
        ap_const_lv8_0 when (xor_ln765_reg_1023(0) = '1') else 
        src_kernel_win_1_fu_142;
    src_kernel_win_17_fu_662_p3 <= 
        ap_const_lv8_0 when (xor_ln765_reg_1023(0) = '1') else 
        src_kernel_win_2_fu_146;
    src_kernel_win_18_fu_655_p3 <= 
        ap_const_lv8_0 when (xor_ln765_reg_1023(0) = '1') else 
        src_kernel_win_4_fu_150;
    src_kernel_win_19_fu_586_p7 <= "XXXXXXXX";
    src_kernel_win_6_out <= src_kernel_win_6_reg_1030_pp0_iter26_reg;

    src_kernel_win_6_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter26_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_6_out_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    src_kernel_win_7_out_o_assign_proc : process(ap_enable_reg_pp0_iter7, src_kernel_win_7_out_i, ap_block_pp0_stage0, src_kernel_win_6_reg_1030)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            src_kernel_win_7_out_o <= src_kernel_win_6_reg_1030;
        else 
            src_kernel_win_7_out_o <= src_kernel_win_7_out_i;
        end if; 
    end process;


    src_kernel_win_7_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_7_out_o_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_7_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    src_kernel_win_8_out_o_assign_proc : process(ap_enable_reg_pp0_iter7, src_kernel_win_8_out_i, ap_block_pp0_stage0, src_kernel_win_8_reg_1044)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            src_kernel_win_8_out_o <= src_kernel_win_8_reg_1044;
        else 
            src_kernel_win_8_out_o <= src_kernel_win_8_out_i;
        end if; 
    end process;


    src_kernel_win_8_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_8_out_o_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_8_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    src_kernel_win_9_fu_542_p3 <= 
        ap_const_lv8_0 when (tmp_4_reg_948_pp0_iter4_reg(0) = '1') else 
        k_buf_2_load_reg_988;
    src_kernel_win_9_out <= src_kernel_win_7_reg_1037_pp0_iter26_reg;

    src_kernel_win_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln709_reg_914_pp0_iter26_reg)
    begin
        if (((icmp_ln709_reg_914_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_kernel_win_9_out_ap_vld <= ap_const_logic_1;
        else 
            src_kernel_win_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_reg_875 <= empty_27;
    tmp_5_fu_457_p4 <= ap_sig_allocacmp_j_1(15 downto 1);
    tmp_reg_871 <= empty;
    x_fu_507_p3 <= 
        ImagLocx_reg_923_pp0_iter1_reg when (and_ln637_reg_938(0) = '1') else 
        ap_const_lv16_FFFF;
    xor_ln637_fu_482_p2 <= (tmp_3_reg_929 xor ap_const_lv1_1);
    xor_ln765_fu_605_p2 <= (icmp_ln765_reg_943_pp0_iter4_reg xor ap_const_lv1_1);
    zext_ln696_cast_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln696),17));
    zext_ln709_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),17));
end behav;
